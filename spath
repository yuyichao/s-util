#!/bin/bash
s_shelp()
{
cat <<EOF
This command search for files in the PATH
USAGE:
	$(basename $0) [OPTIONS] [KEYWORDS]
OPTIONS:
	-r/--reg: use regular expression
	-n/--noexec: also search not executable files
	-p/--path PATH: search PATH instead of default PATH
	-f/--full: show the full path of the command found
	-v/--version: show the version number and exit
	-h/--help: show this help and exit
EOF
}

. s_init.sh

NONE_EXEC=0
REG=0
FULL_PATH=0
s_path="${PATH}"

for ((i = 0;i < ${#args[@]};)) ;do
    case "${args[i]}" in
	-r|--reg)
	    darg $i
	    REG=1
	    ;;
	-n|--noexec)
	    darg $i
	    NONE_EXEC=1
	    ;;
	-p|--path)
	    darg $i
	    s_path="${args[i]}"
	    darg $i
	    ;;
	-f|--full)
	    darg $i
	    FULL_PATH=1
	    ;;
	*)
	    let 'i++'
	    ;;
    esac
done

command="find -L ${s_path//:/ } -maxdepth 1 -type f"
[ ${NONE_EXEC} = 0 ] && command="${command} -and -perm /111"

if [ "$FULL_PATH" = 1 ] ;then
    EXTRA=''
else
    EXTRA='s:^.*/::g'
fi

if [ ${#args[@]} = "0" ] ;then
    [[ "${EXTRA}" != "" ]] && {
	$command | sed -e "${EXTRA}"
	exit
    }
    $command
fi

ONE_KEYWORD=0

if [ ${#args[@]} = "1" ] ;then
    ONE_KEYWORD=1
fi

for ((i = 0;i < ${#args[@]};i++)) ;do
    key="${args[i]}"
    [ ${ONE_KEYWORD} = 0 ] && echo "${key}:"
    if [ "$REG" = 1 ] ;then
	${command}
    else
	${command} -name "${key}"
    fi | if [[ "${EXTRA}" != "" ]] ;then
	sed -e "${EXTRA}"
    else
	tee
    fi | if [[ "$REG" = 1 ]] ;then
	grep "${key}"
    else
	tee
    fi
done
