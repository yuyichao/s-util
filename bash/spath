#!/bin/bash

# Copyright 2010, 2011 Yu Yichao, Rudy
# yyc1992@gmail.com
# rudyht@gmail.com
#
# This file is part of s-util.
#
# s-util is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# s-util is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with s-util.  If not, see <http://www.gnu.org/licenses/>.
#

s_shelp()
{
cat <<EOF
This command search for files in the PATH
USAGE:
        $(basename $0) [OPTIONS] [KEYWORDS]
OPTIONS:
        -r/--noreg: do not use regular expression
        -n/--noexec: also search not executable files
        -p/--path PATH: search PATH instead of default PATH
        -f/--full: show the full path of the command found
        -v/--version: show the version number and exit
        -h/--help: show this help and exit
EOF
}

. s_init.sh

NONE_EXEC=0
REG=1
FULL_PATH=0
s_path="${PATH}"

for ((i = 0;i < ${#args[@]};)) ;do
    case "${args[i]}" in
        -r|--noreg)
            darg $i
            REG=0
            ;;
        -n|--noexec)
            darg $i
            NONE_EXEC=1
            ;;
        -p|--path)
            darg $i
            s_path="${args[i]}"
            darg $i
            ;;
        -f|--full)
            darg $i
            FULL_PATH=1
            ;;
        *)
            let 'i++'
            ;;
    esac
done

command="find -L ${s_path//:/ } -maxdepth 1 -type f"
[ ${NONE_EXEC} = 0 ] && command="${command} -and -perm /111"

if [ "$FULL_PATH" = 1 ] ;then
    EXTRA=''
else
    EXTRA='s:^.*/::g'
fi

if [ ${#args[@]} = "0" ] ;then
    $command | if [[ "${EXTRA}" != "" ]] ;then
        sed -e "${EXTRA}"
    else
        tee
    fi | sort -u
fi

ONE_KEYWORD=0

if [ ${#args[@]} = "1" ] ;then
    ONE_KEYWORD=1
fi

for ((i = 0;i < ${#args[@]};i++)) ;do
    key="${args[i]}"
    [ ${ONE_KEYWORD} = 0 ] && echo "${key}:"
    if [ "$REG" = 1 ] ;then
        ${command}
    else
        ${command} -name "${key}"
    fi | if [[ "${EXTRA}" != "" ]] ;then
        sed -e "${EXTRA}"
    else
        tee
    fi | if [[ "$REG" = 1 ]] ;then
        grep "${key}"
    else
        tee
    fi | sort -u
done
