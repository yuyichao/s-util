#!/bin/bash

if [[ $(id -u) == 0 ]] ;then
    s_util_dir=/usr/share/sutil
else
    s_util_dir=~/.sutil
fi
filelst=${s_util_dir}/files.lst
varlst=${s_util_dir}/vars.lst
cmdlst=${s_util_dir}/cmds.lst

s_uninstall()
{
    [ -r "${filelst}" ] && xargs rm < "${filelst}" &> /dev/null && rm "${filelst}"
    if ! [ -r "${varlst}" ] ;then
	echo "cannot find ${varlst}"
	exit
    fi
    {
	read S_INSTALL_DIST
	read S_BASH_RC
    } < "${varlst}"
    begin=$(grep -n '^##\^\^' ${S_BASH_RC} |  cut -d: -f1 | head -1)
    end=$(grep -n '^##\$\$' ${S_BASH_RC} |  cut -d: -f1 | head -1)
    if [ "$begin" -lt "$end" ] &> /dev/null ;then
	mv ${S_BASH_RC} ${S_BASH_RC}~
	awk "NR < ${begin} || NR > ${end}" < ${S_BASH_RC}~ > ${S_BASH_RC} && rm "${varlst}"
    else
	echo "you may need to clear bashrc manually"
    fi
    rm "${cmdlst}"
    rmdir ${s_util_dir} &>/dev/null || true
}

for ((i = 1;i <= $#;i++)) ;do
    case ${!i} in
	-t)
	    let 'i++'
	    S_INSTALL_DIST=${!i}
	    ;;
	-r)
	    let 'i++'
	    S_BASH_RC=${!i}
	    ;;
	-u)
	    s_uninstall
	    exit
	    ;;
	*)
	    args[${#args[@]}]="$i"
	    ;;
    esac
done

if [ "$S_INSTALL_DIST" = "" ] ;then
    if [ "$(id -u)" = "0" ] ;then
	S_INSTALL_DIST="/usr/bin"
    else
	S_INSTALL_DIST="${HOME}/bin"
    fi
fi

eval realhome=~$(logname)

if [ "$S_BASH_RC" = "" ] ;then
    if [[ "$S_INSTALL_DIST" =~ ^${realhome} ]] ;then
	S_BASH_RC=${realhome}/.bashrc
    else
	S_BASH_RC=/etc/bash.bashrc
    fi
fi

cat > "${varlst}" <<EOF
${S_INSTALL_DIST}
${S_BASH_RC}
EOF

s_srcdir="$(basename "${BASH_SOURCE}")"

ignore=('.*/\..*' '.*\.lst' '\./README' '.*~')
notcmd=('.*\.sh')

find_cmd='find'

for file in $(find ! -regex '\./install' -and ! -name '.*' -and ! -regex '.*/\.[^/]*/.*' -and ! -regex '.*\.lst' -and ! -regex '\./README' -and ! -regex '.*~') ;do
    file=${file#./}
    if [ "$file" = "setup.sh" ] ;then
	sed -e "s:@@install_dir:${S_INSTALL_DIST}:g" < "${file}" > ${S_INSTALL_DIST}/setup.sh
	chmod 644 ${S_INSTALL_DIST}/setup.sh
	echo "${S_INSTALL_DIST}/setup.sh" >> "${filelst}"
	continue
    fi
    if [ "$file" = "s_init.sh" ] ;then
	install -m644 ${file} ${S_INSTALL_DIST}/${file}
	echo "${S_INSTALL_DIST}/s_init.sh" >> "${filelst}"
	continue
    fi
    install -m755 ${file} ${S_INSTALL_DIST}/${file}
    echo "${S_INSTALL_DIST}/${file}" >> "${filelst}"
done

if [ $(tail -n1 ${S_BASH_RC} | wc -l) = 0 ] ;then
    echo >> ${S_BASH_RC}
fi
echo '##^^this part is generate automatically when installing' >> ${S_BASH_RC}
echo "[ -r ${S_INSTALL_DIST}/setup.sh ] && . ${S_INSTALL_DIST}/setup.sh" >> ${S_BASH_RC}
echo '##$$end' >> ${S_BASH_RC}